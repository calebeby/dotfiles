snippet lo
  console.log(${1})

snippet r
  '${1:name}': ${2:'error'},

snippet bind
  this.${1:method} = this.$1.bind(this)

snippet test
alias t
	test('${1:description}', () => {
		${2}
	})

snippet describe
alias des
	describe('${1:name}', () => {
		${2}
	})

snippet ava
	import test from 'ava'

snippet #!
	#!/usr/bin/env node

snippet render
	render(<${1:App} />, document.getElementById('${2:app}'))

snippet preact
alias ipr
	import { h${1:, Component} } from 'preact'

snippet sst
	this.setState({${1}})

snippet import
alias im
	import ${1:name} from '${2:$1}'

snippet require
alias re
  const ${1:name} = require('${2:$1}')

snippet mex
	module.exports = 

snippet ex
	export ${1:default} 

snippet me
	${1:name}(${2:arguments}) {
		${3:body}
	}

snippet ()component
alias ()co
  import { h } from 'preact'

  const ${1:name} = ${2:(props, state)} => ${3}

	export default $1

snippet component
alias co
  import { h, Component } from 'preact'

	class ${1:Name} extends Component {
		constructor() {
			super()
			this.state = {${2}}
		}

		render() {
			return (
				${3}
			)
		}
	}

  export default $1

snippet ()
alias (
options head
	const ${1:name} = ${2:arguments} => ${3:body}

snippet if
	if (${1:condition}) {
		${2:body}
	}

snippet ife
	if (${1:condition}) {
		${2:body}
	} else {
		${3:body}
	}

snippet ifelif
	if (${1:condition}) {
		${2:body}
	} else if (${3:condition}) {
		${4:body}
	}

snippet ifelife
	if (${1:condition}) {
		${2:body}
	} else if (${3:condition}) {
		${4:body}
	} else {
		${5:body}
	}

snippet meow
	const cli = meow(\`
		Usage
			$ ${1:foo} <input>

		Options
			--rainbow, -r  Include a rainbow

		Examples
			$ $1 unicorns --rainbow
			unicorns
	\`)
